name: Lint and test rental management app
on:
  push:
    branches:
      - main
    paths:
      - app/**
  pull_request:
    branches: ["main"]
    paths:
      - app/**
      
permissions:
  contents: read
  pull-requests: write

jobs:
  lint-project:
    name: Lint dilicom rental management app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version: "3.12"
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-0  # increment to reset cache
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a # v1.4.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install project
        run: poetry install --no-interaction
      - name: Run tests
        run: |
          poetry run pytest --cov=./app --cov-report term --cov-report xml:coverage.xml --junit-xml=junit-report.xml
          poetry build
      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@81882822c5b22af01f91bd3eacb1cefb6ad73dc2 # v1
        with:
          pytest-xml-coverage-path: ./coverage.xml
          junitxml-path: ./junit-report.xml
